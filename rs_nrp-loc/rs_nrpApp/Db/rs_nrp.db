#
#  author  : muyuanwang
#  email   : wangmy@ihep.ac.cn

########## Get Power-Sensor Manufactor ##########
record(stringin, "$(secsub):$(disdevidx):GetManufactor")
{
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getPOWmanufactor $(PORT)")
    field(SCAN, "1 second")
}
########## Reset ##########
record(bo, "$(secsub):$(disdevidx):reset")
{
    field(SCAN, "Passive")    
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto Reset $(PORT)")
    field(VAL,  "0")
    field(PINI, "YES")
    field(ZNAM, "reset off")
    field(ONAM, "reset on")
}
########## SetRun for Power Sensor ##########
record(bo, "$(secsub):$(disdevidx):setRun")
{
    field(SCAN, "Passive")    
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setRun $(PORT)")
    field(VAL,  "0")
    field(PINI, "YES")
    field(ZNAM, "run off")
    field(ONAM, "run on")
}
########## <--Main GUI Parameter--> ###########
#######################################
########## Frequency setting ##########
record(ao,"$(secsub):$(disdevidx):FREQ_value")
{
    field(SCAN, "1 second")
    field(PHAS, "0")
    field(FLNK, "$(secsub):$(disdevidx):setFREQ")
    field(VAL,  "702.059")
    field(EGU,  "MHz")
    field(PREC, "3")
    field(PINI, "YES")
}
record(calcout,"$(secsub):$(disdevidx):setFREQ")
{
    field(SCAN, "1 second")
    field(PHAS, "1")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setFrequency $(PORT)")
    field(CALC, "A*B")
    field(INPA, "$(secsub):$(disdevidx):FREQ_value.VAL")
    field(INPB, "1e6")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
}

record(ai, "$(secsub):$(disdevidx):getFREQ")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getFrequency $(PORT)")
    field(EGU,  "Hz")
    field(PREC, "3")
}
##########################################################
########## -->Continuous Mode GUI<-- ##########
########### 1.Offset Setting ###########
record(bo, "$(secsub):$(disdevidx):offset_switch")
{
    field(SCAN, "1 second")
    field(VAL,  "0")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto offset_switch($(secsub):$(disdevidx)) $(PORT)")
    field(ZNAM, "0")
    field(ONAM, "1")
}

record(ao, "$(secsub):$(disdevidx):offset_value")
{
    field(SCAN, "Passive")
    field(VAL,  "10")
    field(EGU,  "dB")
    field(PREC, "1")
    field(PINI, "YES")
}

########### 2.Averaging ###########
record(ao, "$(secsub):$(disdevidx):setAverage")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setAverage $(PORT)")
    field(VAL,  "4")
    field(PINI, "YES") 
}

record(ai, "$(secsub):$(disdevidx):getAverage")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getAverage $(PORT)")
}

########### 3.Aperture Time Setting ############
record(ao,"$(secsub):$(disdevidx):Aperture_value")
{
    field(SCAN, "Passive")
    field(EGU,  "ms")
    field(PREC, "3")
    field(VAL,  "20")
    field(PINI, "YES")
    field(HIHI, "2000")
    field(HIGH, "1800")
    field(LOW,  "0.012")
    field(LOLO, "0.01")
    field(HHSV, "MAJOR")
    field(HSV,  "MINOR")
    field(LSV,  "MINOR")
    field(LLSV, "MAJOR")
    field(FLNK, "$(secsub):$(disdevidx):set_Aperture")
}
record(calcout,"$(secsub):$(disdevidx):set_Aperture")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setAperture $(PORT)")
    field(CALC, "A/B")
    field(INPA, "$(secsub):$(disdevidx):Aperture_value.VAL")
    field(INPB, "1000")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
}

record(ai, "$(secsub):$(disdevidx):get_Aperture")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getAperture $(PORT)")
    field(EGU,  "s")
    field(FLNK, "$(secsub):$(disdevidx):get_Aperture_calc")
}
record(calc, "$(secsub):$(disdevidx):get_Aperture_calc")
{
    field(SCAN, "Passive")
    field(INPA, "$(secsub):$(disdevidx):get_Aperture.VAL")
    field(INPB, "1e3")
    field(CALC, "A*B")
    field(EGU,  "ms")
    field(PREC, "3")
    field(HIHI, "2000")
    field(HIGH, "1800")
    field(LOW,  "0.012")
    field(LOLO, "0.01")
    field(HHSV, "MAJOR")
    field(HSV,  "MINOR")
    field(LSV,  "MINOR")
    field(LLSV, "MAJOR")
}
########### 4.Duty Cycle Setting ############
record(ao,"$(secsub):$(disdevidx):DCycle_value")
{
    field(SCAN, "Passive")
    field(OUT,  "$(secsub):$(disdevidx):DCycle_value.VAL")
    field(EGU,  "%")
    field(PREC, "2")
    field(VAL,  "1")
    field(PINI, "YES")
}

record(bo,"$(secsub):$(disdevidx):set_DCycle")
{
    field(SCAN, "1 second")
    field(VAL,  "0")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setDCycle($(secsub):$(disdevidx)) $(PORT)")
    field(ZNAM, "0")
    field(ONAM, "1")
}
############ 5.Smoothing Setting ###########
record(bo,"$(secsub):$(disdevidx):smoothing")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setSmoothing $(PORT)")
    field(VAL,  "0")
    field(PINI, "YES")
    field(ZNAM, "0")
    field(ONAM, "1")
}

record(stringin, "$(secsub):$(disdevidx):SmoothingState")
{
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getSmoothing $(PORT)")
    field(SCAN, "1 second")
}
########## Fetch the Power-Sensor Value ##########
################## -->DBM<-- ###################
record(ai,"$(secsub):$(disdevidx):Value_DBM")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getPowerDBM $(PORT)")
    #field(VAL,  "0")
    field(PINI, "YES")
    field(PREC, "4")
    field(EGU,  "dBm")    
}
##########################################################
########## -->Trace Mode GUI<-- ##########
############# Trace switch ##############
record(bo, "$(secsub):$(disdevidx):setTrace")
{
    field(SCAN, "Passive")   
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setTrace $(PORT)")
    field(VAL,  "0")
    field(PINI, "YES")
    field(ZNAM, "trace off")
    field(ONAM, "trace on")
}

################# Trace Parameter ##################
############ trace time ############
record(ao,"$(secsub):$(disdevidx):Trace_time")
{
    field(SCAN, "Passive")
    field(FLNK, "$(secsub):$(disdevidx):Trace_time_calc")
    field(EGU,  "ms")
    field(VAL,  "10")
    field(PINI, "YES")
    field(PREC, "3")
}
record(calcout,"$(secsub):$(disdevidx):Trace_time_calc")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setTraceTime $(PORT)")
    field(CALC, "A/B")
    field(INPA, "$(secsub):$(disdevidx):Trace_time.VAL")
    field(INPB, "1000")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
    field(PREC, "6")
}

record(ai, "$(secsub):$(disdevidx):Trace_time_callback")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getTracetime $(PORT)")
    field(EGU,  "s")
    field(PREC, "6")
    field(HIHI, "3")
    field(HIGH, "2.5")
    field(LOW,  "12e-6")
    field(LOLO, "10e-6")
    field(HHSV, "MAJOR")
    field(HSV,  "MINOR")
    field(LSV,  "MINOR")
    field(LLSV, "MAJOR")
}
############ trace offset time ############
record(ao,"$(secsub):$(disdevidx):Trace_offset_time")
{
    field(SCAN, "Passive")
    field(FLNK, "$(secsub):$(disdevidx):Trace_offset_time_calc")
    field(VAL,  "0")
    field(PINI, "YES")
    field(PREC, "3")
    field(EGU,  "ms")
}
record(calcout,"$(secsub):$(disdevidx):Trace_offset_time_calc")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setTraceOffsetTime $(PORT)")
    field(CALC, "A/B")
    field(INPA, "$(secsub):$(disdevidx):Trace_offset_time.VAL")
    field(INPB, "1000")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
    field(PREC, "6")
}

record(ai,"$(secsub):$(disdevidx):Trace_offset_time_callback")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getTraceOffsetTime $(PORT)")
    field(EGU,  "s")
    field(PREC, "6")
}
############ trace points ############
record(ao,"$(secsub):$(disdevidx):Trace_points")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setTracePoints $(PORT)")
    field(VAL,  "260")
    field(PINI, "YES")
}

record(ai,"$(secsub):$(disdevidx):Trace_points_callback")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getTracePoints $(PORT)")
    field(HIHI, "5000")
    field(HIGH, "4500")
    field(LOW,  "110")
    field(LOLO, "100")
    field(HHSV, "MAJOR")
    field(HSV,  "MINOR")
    field(LSV,  "MINOR")
    field(LLSV, "MAJOR")
}
############ trigger source ############
record(mbbo, "$(secsub):$(disdevidx):setTriggerSource")
{
    field(DTYP, "Soft Channel")
    field(OUT,  "$(secsub):$(disdevidx):setTriggerSource_to")
    field(VAL,  "1")
    field(PINI, "YES")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    #field(FRVL, "4")
    #field(FVVL, "5")
    #field(SXVL, "6")
    field(ONST, " 1  :  IMMediate")
    field(TWST, " 2  :  INTernal")
    field(THST, " 3  :  EXTernal2")
    #field(FRST, " 4  :  EXTernal2")
    #field(FVST, " 5  :  BUS")
    #field(SXST, " 6  :  HOLD")
}
record(calcout, "$(secsub):$(disdevidx):setTriggerSource_to")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(OUT, "@rs_nrp.proto setTriggerSource $(PORT)")
    field(CALC, "A")
    field(INPA, "$(secsub):$(disdevidx):setTriggerSource.VAL")
}

record(stringin, "$(secsub):$(disdevidx):TriggerSource")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getTriggerSource $(PORT)")
}

############ trace level ############
record(ao,"$(secsub):$(disdevidx):Trace_level_DBM")
{
    field(SCAN, "Passive")
    field(FLNK, "$(secsub):$(disdevidx):Trace_level_W")
    field(EGU,  "dBm")
    field(VAL,  "-30")
    field(PINI, "YES")
    field(PREC, "2")
}
record(calcout, "$(secsub):$(disdevidx):Trace_level_W")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setTracelevel $(PORT)")
    field(CALC, "(10^(A/10))/1000")
    field(INPA, "$(secsub):$(disdevidx):Trace_level_DBM.VAL")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
    field(PREC, "3")
}
record(ao, "$(secsub):$(disdevidx):Trace_level_W_second")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setTracelevel $(PORT)")
    field(VAL,  "1e-6")
    field(PINI, "YES")
    field(PREC, "3")
    field(EGU,  "W")
}

record(ai,"$(secsub):$(disdevidx):Trace_level_callback_W")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getTracelevel $(PORT)")
    field(EGU,  "W")
    field(PREC, "4")
    field(FLNK, "$(secsub):$(disdevidx):Trace_level_callback_DBM")
}
record(calc, "$(secsub):$(disdevidx):Trace_level_callback_DBM")
{
    field(SCAN, "Passive")
    field(INPA, "$(secsub):$(disdevidx):Trace_level_callback_W.VAL PP")
    field(CALC, "10*LOG(A)+30")
    field(EGU,  "dBm")
    field(PREC, "2")
    field(HIHI, "20")
    field(HIGH, "18")
    field(LOW,  "-36")
    field(LOLO, "-40")
    field(HHSV, "MAJOR")
    field(HSV,  "MINOR")
    field(LSV,  "MINOR")
    field(LLSV, "MAJOR")
}
############ trigger delay ############
record(ao,"$(secsub):$(disdevidx):Trace_delay")
{
    field(SCAN, "Passive")
    field(FLNK, "$(secsub):$(disdevidx):Trace_delay_calc")
    field(EGU,  "ms")
    field(VAL,  "0")
    field(PINI, "YES")
    field(PREC, "1")
}
record(calcout,"$(secsub):$(disdevidx):Trace_delay_calc")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto setTriggerDelay $(PORT)")
    field(CALC, "A/B")
    field(INPA, "$(secsub):$(disdevidx):Trace_delay.VAL")
    field(INPB, "1000")
    field(OOPT, "Every Time")
    field(DOPT, "Use CALC")
}

record(ai,"$(secsub):$(disdevidx):Trace_delay_callback")
{
    field(SCAN, "1 second")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getTriggerDelay $(PORT)")
    field(EGU,  "s")
    field(PREC, "4")
}
############ trigger slope ############
record(bo, "$(secsub):$(disdevidx):trigger_slope")
{
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(OUT,  "@rs_nrp.proto triggerSlope $(PORT)")
    field(VAL,  "1")
    field(PINI, "YES")
    field(ONAM, "Positive")
    field(ZNAM, "Negative")
}    
############## Get trace value ###############
########## DBM --> trace value ############
record(waveform,"$(secsub):$(disdevidx):Value_trace_DBM")
{   
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getTraceValueDBM $(PORT)")
    field(FTVL, "DOUBLE")
    field(NELM, "5000")
    field(EGU,  "dBm")
    field(PINI, "YES")
    field(PREC, "4")
}
########## W --> trace value ##########
record(waveform,"$(secsub):$(disdevidx):Value_trace_W")
{   
    field(SCAN, "Passive")
    field(DTYP, "stream")
    field(INP,  "@rs_nrp.proto getTraceValueW $(PORT)")
    field(FTVL, "DOUBLE")
    field(NELM, "5000")
    field(EGU,  "W")
    field(PINI, "YES")
    field(PREC, "4")
}
#record(acalcout, "$(secsub):$(disdevidx):uW_calc")
#{ 
#    field(NELM, "5000")
#    field(NUSE, "260")
#    field(INAA, "$(secsub):$(disdevidx):Value_trace_W CP")
#    field(INPA, "1e6")
#    field(CALC, "@@0*@0")
#    field(EGU,  "uW")
#    field(PREC, "3")
#}
############ CSS X/Y Display ############
########## --> Time Array <-- ##########
record(acalcout, "$(secsub):$(disdevidx):timeArray_")
{
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(NELM, "5000")
    field(NUSE, "260")
    field(INPA, "$(secsub):$(disdevidx):timeArray_.NUSE")
    field(INPB, "$(secsub):$(disdevidx):Trace_time_callback CP")
    field(INPC, "$(secsub):$(disdevidx):Trace_offset_time_callback CP")
    field(CALC, "IX*(@1*1000/@0)+((IX+1)/(IX+1))*@2*1000")
    #field(OUT,  "$(secsub):$(disdevidx):timeArray PP")
    field(FLNK, "$(secsub):$(disdevidx):timeArrayCALC")
    field(EGU,  "ms")
}
record(acalcout, "$(secsub):$(disdevidx):timeArray_us")
{
    field(SCAN, "Passive")
    field(PINI, "YES")
    field(NELM, "5000")
    field(NUSE, "260")
    field(INPA, "$(secsub):$(disdevidx):timeArray_us.NUSE")
    field(INPB, "$(secsub):$(disdevidx):Trace_time_callback CP")
    field(INPC, "$(secsub):$(disdevidx):Trace_offset_time_callback CP")
    field(CALC, "1000*(IX*(@1*1000/@0)+((IX+1)/(IX+1))*@2*1000)")
    #field(OUT,  "$(secsub):$(disdevidx):timeArray PP")
    field(FLNK, "$(secsub):$(disdevidx):timeArrayCALC")
    field(EGU,  "us")
}
record(acalcout, "$(secsub):$(disdevidx):timeArrayCALC")
{
    field(SCAN, "Passive")
    field(NELM, "5000")
    field(NUSE, "260")
    field(INPA, "$(secsub):$(disdevidx):Trace_time_callback CP")
    field(INAA, "$(secsub):$(disdevidx):timeArray_.AVAL PP")
    field(INBB, "$(secsub):$(disdevidx):timeArray_us.AVAL PP")
    field(CALC, "@0<0.003?@@1:@@0")
    field(OUT,  "$(secsub):$(disdevidx):timeArray PP")
}
record(waveform, "$(secsub):$(disdevidx):timeArray")
{
    field(DESC, "Time X-axis: ms/us unit")
    field(SCAN, "1 second")
    field(FTVL, "DOUBLE")
    field(NELM, "5000")
    field(EGU,  "ms/us")
    field(PREC, "3")
}
########## --> Trigger DBM/W Array <-- ##########
record(acalcout, "$(secsub):$(disdevidx):triggerArrayDBM")
{
    field(DESC, "Trigger Yaxis: DBM unit")
    field(SCAN, "Passive")
    field(NELM, "5000")
    field(NUSE, "260")
    field(INPA, "$(secsub):$(disdevidx):Trace_level_callback_DBM CP")
    field(CALC, "(IX+1)/(IX+1)*@0")
    field(EGU,  "dBm")
    field(PREC, "3")
}

record(acalcout, "$(secsub):$(disdevidx):triggerArrayW")
{
    field(DESC, "Trigger Yaxis: W unit")
    field(SCAN, "Passive")
    field(NELM, "5000")
    field(NUSE, "260")
    field(INPA, "$(secsub):$(disdevidx):Trace_level_callback_W CP")
    field(CALC, "(IX+1)/(IX+1)*@0")
    field(EGU,  "W")
    field(PREC, "3")
}
