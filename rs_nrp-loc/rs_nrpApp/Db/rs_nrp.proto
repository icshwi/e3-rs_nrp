Terminator = LF;
ExtraInput = Ignore;
LockTimeout = 20000;
ReplyTimeout = 15000;
ReadTimeout  = 300;

############### MANUFACTOR ###############
getPOWmanufactor
{
    out "*IDN?";
    in  "%39c";
}

############### RESET ##############
Reset
{
    out "%{|*RST}";
}
############### RUN ###############
setRun
{
    #out "%{|*RST}";
    out "%{|SENS:FUNC \"POW:AVG\"}";
    out "%{|SENS:AVER:COUN:AUTO OFF}";
    out "INIT:CONT %{OFF|ON}";
}
############### FREQUENCY? ###############
getFrequency
{
    out "FREQuency?";    in "%g";
}

setFrequency
{ 
    out "FREQuency %g";
    #@init { getFrequency; }
}

############### OFFSET_SWITCH ###############
offset_switch
{      
    out "CORRection:OFFSet %(\$1:offset_value.VAL)f";
    out "%#{CORR:OFFS:STAT OFF=0|CORR:OFFS:STAT ON=1}";   
}

############### Average ################
getAverage
{
    out "SENSe:AVERage:COUNt?"; in "%f";
}

setAverage
{
    out "SENSe:AVERage:COUNt %f";
    #@init { getAverage; }
}

#################################################
############### -->Continuous Mode<-- ###########
#################################################
############### APERTURE TIME ###############
getAperture
{
    out "SENSe:POWer:AVG:APERture?";    in "%f";
}

setAperture
{ 
    out "SENSe:POWer:AVG:APERture %f";
    #@init { getAperture; }
}

############### SMOOTHING ###############
setSmoothing
{
    out "%#{SENSe:POWer:AVG:SMOothing:STATe OFF=0|SENSe:POWer:AVG:SMOothing:STATe ON=1}";       
}

getSmoothing
{
    out "SENSe:POWer:AVG:SMOothing:STATe?";
    in "%s";
}
############### DUTY CYCLE Setting ##############
setDCycle
{      
    out "SENSe:CORRection:DCYCle %(\$1:DCycle_value.VAL)f";
    out "%#{SENSe:CORRection:DCYCle:STATe OFF=0|SENSe:CORRection:DCYCle:STATe ON=1}";   
}

############### Power Measurement ###############
getPowerDBM
{
    out "UNIT:POW DBM";
    out "CALC:FEED \"POW:AVER\"";
    out "INIT";
    out "FETCh?";
    in  "%g";
}

################################################
###############-->Trace Mode<-- ################
################################################
############ Trace Value #############
setTrace
{
    #out "%{|*RST}";
    out "%{|SENS:FUNC \"XTIMe:POWer\"}";
    out "INIT:CONT %{OFF|ON}";
}

getTraceValueDBM
{
    out "UNIT:POW DBM";
    out "CALC:FEED \"POW:TRAC\"";
    out "INIT";
    out "FETCh?";
    separator=","; 
    in  "%g";
}

getTraceValueW
{
    out "UNIT:POW W";
    out "CALC:FEED \"POW:TRAC\"";
    out "INIT";
    out "FETCh?";
    separator=","; 
    in  "%g";
}
############### ->Trace Setting<- ##############
############ 1.Trace Points ###########
getTracePoints
{
    out "SENS:TRAC:POIN?";    in "%f";
}
setTracePoints
{
    out "SENS:TRAC:POIN %f";
    #out "SENS:TRAC:POIN %(A).0f";
    #@init { getTracePoints; }
}
############ 2.Trace OffsetTime ############
getTraceOffsetTime
{
    out "SENS:TRAC:OFFS:TIME?";   in "%g";  
}
setTraceOffsetTime
{
    out "SENS:TRAC:OFFS:TIME %g";
    #@init { getTraceOffsetTime; }
}
############ 3.Trace Time ############
getTracetime
{
    out "SENS:TRAC:TIME?";    in "%g";
}
setTraceTime
{
    out "SENS:TRAC:TIME %g";
    #@init { getTracetime; }
}
############ 4.Trace Trigger Source ############
getTriggerSource
{
    out "TRIG:SOUR?";
    in  "%39c";
}

setTriggerSource
{
    #out "TRIG:SOUR %#{IMM=1|INT=2|EXT=3|EXT2=4|BUS=5|HOLD=6}";
    out "TRIG:SOUR %#{IMM=1|INT=2|EXT2=3}";
}
############ 5.Trace Trigger Level ############
getTracelevel
{
    out "TRIG:LEV?";
    in "%g";
}
setTracelevel
{
    out "TRIG:LEV %g";
    #@init { getTracelevel; }
}

############ 6.Trace Trigger Delay ############
getTriggerDelay
{
    out "TRIG:DEL?";
    in "%f";
}
setTriggerDelay
{
    out "TRIG:DEL %f";
    #@init { getTriggerDelay; }
}

############ 7.Trace Trigger Slope ############
triggerSlope
{
    out "%#{TRIG:SLOP NEG=0|TRIG:SLOP POS=1}";
}

